<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>darglint on Claudio Jolowicz</title>
    <link>https://cjolowicz.github.io/tags/darglint/</link>
    <description>Recent content in darglint on Claudio Jolowicz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 29 Jan 2020 12:49:59 +0200</lastBuildDate>
    
	<atom:link href="https://cjolowicz.github.io/tags/darglint/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hypermodern Python Chapter 5: Documentation</title>
      <link>https://cjolowicz.github.io/posts/hypermodern-python-05-documentation/</link>
      <pubDate>Wed, 29 Jan 2020 12:49:59 +0200</pubDate>
      
      <guid>https://cjolowicz.github.io/posts/hypermodern-python-05-documentation/</guid>
      <description>Read this article on Medium
  In this fifth installment of the Hypermodern Python series, I&amp;rsquo;m going to discuss how to add documentation to your project.1 In the previous chapter, we discussed how to add type annotations and type checking. (If you start reading here, you can also download the code for the previous chapter.)
Here are the topics covered in this chapter on documentation:
 Documenting code with Python docstrings Linting code documentation with flake8-docstrings Adding docstrings to Nox sessions Adding docstrings to the test suite Validating docstrings against function signatures with darglint Running documentation examples with xdoctest Creating documentation with Sphinx Writing documentation using reStructuredText Generating API documentation with autodoc  Here is a full list of the articles in this series:</description>
    </item>
    
  </channel>
</rss>